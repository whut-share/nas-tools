name: Nas-tools Build Synology SPK

on:
  push:
    branches: [ master ]
    paths:
      - version.py

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the synology spk
      run: |
        mv synology/ui ./
        tar -zcvf package.tgz *.py *.txt service/ rmt/ message/ web/ ui/ config/ pt/ utils/
        mkdir spk
        mv package.tgz synology/WIZARD_UIFILES synology/conf synology/scripts/ synology/CHANGELOG synology/INFO synology/*.PNG synology/*.asc spk/
        cd spk/
        chmod 777 scripts/*
        tar -cvf nastool_dsm_6.x.spk *

    - name: Release version
      id: release_version
      run: |
        app_version=$(cat version.py |sed -ne "s/APP_VERSION\s=\s'\(.*\)'/\1/gp")
        echo "app_version=$app_version" >> $GITHUB_ENV

    - name: Create release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.app_version }}
        release_name: ${{ env.app_version }}
        body: ${{ github.event.commits[0].message }}
        draft: false
        prerelease: false

    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: spk/nastool_dsm_6.x.spk
        asset_name: nastool_dsm6_${{ env.app_version }}.spk
        asset_content_type: application/gzip

    - name: Send telegram message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} created commit:
          Commit message: ${{ github.event.commits[0].message }}
          Repository: ${{ github.repository }}
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
